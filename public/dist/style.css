@import url("https://fonts.googleapis.com/css?family=Bungee+Hairline|Lato:300");
* {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}

a {
  text-decoration: none;
}

html,
body {
  height: 100%;
  color: white;
}

.main-nav {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  left: 40px;
}
.main-nav i {
  font-size: 8px;
  display: block;
  margin: 10px;
  transition: margin 200ms ease;
}
.main-nav i:hover {
  color: #ed542c;
}
.main-nav:hover > i {
  margin: 15px 12px;
}

.page {
  height: 100%;
  background-color: transparent;
}

.main-page-content {
  background-color: transparent;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  text-align: center;
}
.main-page-content h1 {
  font-family: "Poppins-Regular";
  font-size: 60px;
}
.main-page-content h2 {
  font-family: "Lato";
  font-size: 16px;
  letter-spacing: 2px;
}

iframe {
  position: absolute;
  top: -100%;
}

.universe {
  z-index: -10000;
  position: fixed;
  top: 0;
  left: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  filter: contrast(120%);
  background-color: black;
  padding: 0px;
  margin: 0px;
  width: 100%;
  height: 100%;
}

.universe-container {
  width: 100%;
  height: 100%;
  background-image: radial-gradient(1600px at 70% 120%, #212750 10%, #020409 100%);
}

.content {
  width: inherit;
  height: inherit;
}

#universe {
  width: 100%;
  height: 100%;
}

#footer {
  position: absolute;
  bottom: 0px;
  height: 300px;
  width: 100%;
}

#scene {
  height: 100%;
  position: absolute;
  left: 50%;
  margin-left: -800px;
  z-index: 100000;
}
body {
	color: #fff;
	font-family: "Rubik", sans-serif;
}


* {
	box-sizing: border-box;
	&:before,
	&:after {
		content: "";
		position: absolute;
	}
}

.main-content {
	display: grid;
	width: 100%;
	grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
	.item {
		display: grid;
		grid-template-rows: 1fr min-content;
		align-items: center;
		justify-content: center;
		height: 50vh;
		flex-wrap: wrap;
		background: var(--bg-color);
		&:not(.footer) {
			padding-top: 1rem;
		}
	}
}

button {
	background: transparent;
	color: #fff;
	border: 3px solid #fff;
	border-radius: 50px;
	padding: 0.8rem 2rem;
	font: 24px "Margarine", sans-serif;
	outline: none;
	cursor: pointer;
	position: relative;
	transition: 0.2s ease-in-out;
	letter-spacing: 2px;
}

.name {
	width: 100%;
	text-align: center;
	padding: 0 0 3rem;
	font: 500 14px 'Rubik', sans-serif;
	letter-spacing: .5px;
	text-transform: uppercase;
	text-shadow: 0 1px 1px rgba(0,0,0,0.4);
}

.button__wrapper {
	display: inline-block;
	position: relative;
	width: 200px;
	height: 65px;
	display: flex;
	justify-content: center;
	align-items: center;
}

.button-pulse {
	button {
		background: var(--bg-color);
		width: 100%;
		height: 100%;
		position: absolute;
		top: 0;
		left: 0;
		z-index: 2;
	}
	.button__wrapper:hover .pulsing {
		&:before {
			animation: pulsing 0.2s linear infinite;
		}
		&:after {
			animation: pulsing1 0.2s linear infinite;
		}
	}
}

.pulsing {
	width: 99%;
	height: 99%;
	border-radius: 50px;
	z-index: 1;
	position: relative;

	&:before,
	&:after {
		width: 100%;
		height: 100%;
		border: inherit;
		top: 0;
		left: 0;
		z-index: 0;
		background: #fff;
		border-radius: inherit;
		animation: pulsing 2.5s linear infinite;
	}
	&:after {
		animation: pulsing1 2.5s linear infinite;
	}
}

@keyframes pulsing {
	0% {
		opacity: 1;
		transform: scaleY(1) scaleX(1);
	}
	20% {
		opacity: 0.5;
	}
	70% {
		opacity: 0.2;
		transform: scaleY(1.8) scaleX(1.4);
	}
	80% {
		opacity: 0;
		transform: scaleY(1.8) scaleX(1.4);
	}
	90% {
		opacity: 0;
		transform: scaleY(1) scaleX(1);
	}
}
@keyframes pulsing1 {
	0% {
		opacity: 1;
		transform: scaleY(1) scaleX(1);
	}
	20% {
		opacity: 0.5;
	}
	70% {
		opacity: 0.2;
		transform: scaleY(1.3) scaleX(1.15);
	}
	80% {
		opacity: 0;
		transform: scaleY(1.3) scaleX(1.15);
	}
	90% {
		opacity: 0;
		transform: scaleY(1) scaleX(1);
	}
}

.button-typewriter {
	button {
		width: 100%;
		height: 100%;
	}
	p {
		animation: typing 4s steps(12) infinite;
		display: inline-block;
		overflow: hidden;
		white-space: nowrap;
	}
	.button__wrapper:hover p {
		animation: blink 0.3s infinite;
	}
}

@keyframes typing {
	0% {
		width: 0;
	}
	50% {
		width: 100%;
	}
	55%,
	65%,
	75% {
		opacity: 1;
	}
	60%,
	70% {
		opacity: 0;
	}
	80% {
		width: 100%;
	}
	100% {
		width: 0;
	}
}

.button-parrot {
	.parrot {
		position: absolute;
		width: 60px;
		text-align: center;
		animation: blink 0.8s infinite;
		color: transparent;
		&:before {
			content: "Click Me!";
		}
		&:nth-child(1) {
			top: -30px;
			left: -40px;
			font: 12px/1 "Margarine", sans-serif;
			transform: rotate(-20deg);
			animation-duration: 0.5s;
		}
		&:nth-child(2) {
			font: 12px/1 "Margarine", sans-serif;
			right: -40px;
			top: -20px;
			transform: rotate(15deg);
			animation-duration: 0.3s;
		}
		&:nth-child(3) {
			font: 16px/1 "Margarine", sans-serif;
			top: -60px;
			left: 15px;
			transform: rotate(10deg);
			animation-duration: 1s;
		}
		&:nth-child(4) {
			font: 18px/1 "Margarine", sans-serif;
			top: -70px;
			left: 95px;
			transform: rotate(2deg);
			animation-duration: 0.7s;
		}
		:nth-child(5) {
			font: 14px/1 "Margarine", sans-serif;
			top: 80px;
			left: 105px;
			transform: rotate(-20deg);
			animation-duration: 0.8s;
		}
:nth-child(6) {
			font: 12px/1 "Margarine", sans-serif;
			top: 80px;
			left: 5px;
			transform: rotate(10deg);
			animation-duration: 1.2s;
		}
	}
	button:hover .parrot:before {
		content: "Do it!";
		width: 70px;
	}
}

@keyframes blink {
	25%,
	75% {
		color: transparent;
	}
	40%,
	60% {
		color: #fff;
	}
}

.button-hand button {
	&:before {
		content: "üëá";
		font-size: 60px;
		transform: scaleX(-1);
		right: 0px;
		top: -68px;
		animation: up-down 1s infinite;
	}
	.hands {
		&:before,
		&:after {
			content: "üëá";
			font-size: 40px;
			opacity: 0;
			transition: 0.4s ease-in-out;
		}
		&:before {
			transform: rotate(-60deg);
			left: -45px;
			top: -10px;
		}
		&:after {
			transform: rotate(170deg);
			right: 30px;
			top: 50px;
		}
	}
	&:hover .hands {
		&:before {
			opacity: 1;
			left: -35px;
		}
		&:after {
			opacity: 1;
			top: 40px;
		}
	}
}

@keyframes up-down {
	50% {
		margin-top: -20px;
	}
}

.button-100 {
	.emoji {
		position: absolute;
		top: -45px;
		left: 0;
		width: 35px;
		height: 35px;
		overflow: hidden;
		&:before {
			content: "üíØ";
			display: inline-block;
			animation: give-score 2.5s infinite;
			position: relative;
			top: 0;
		}
		&:nth-child(2) {
			left: 0;
			right: 0;
			margin: auto;
			&:before {
				animation: give-score 2.5s infinite 0.2s;
			}
		}
		&:nth-child(3) {
			left: auto;
			right: 0;
			&:before {
				animation: give-score 2.5s infinite 0.4s;
			}
		}
	}
	button:hover .emoji:before {
		content: "üëè";
		transition: 0.5s ease;
	}
}

@keyframes give-score {
	30%,
	80% {
		top: 0;
	}
	40%,
	70% {
		top: 50px;
	}
}

.button-pressure {
	marquee {
		position: absolute;
		width: 90%;
		top: 125%;
		left: 5%;
		font: 18px/1 "Margarine", sans-serif;
		span {
			display: inline-block;
			height: 20px;
			&:not(:last-child) {
				margin-right: 130px;
			}
		}
	}
	button:before {
		content: "OMG YAS";
		transition: 0.5s ease;
		left: 0;
		right: 0;
		margin: auto;
		top: -15px;
		font-size: 12px;
		opacity: 0;
	}
	button:hover:before {
		animation: omg-yes 1s;
	}
}

.button-rainbow button {
	animation: rainbow 3s infinite, heartbeat 0.6s infinite;
	background: #c0392b;
	.rainbow {
		width: 120px;
		height: 120px;
		border-radius: 50%;
		position: absolute;
		left: 0;
		right: 0;
		margin: auto;
		top: -40px;
		transition: 0.5s ease;
		opacity: 0;
		transform: rotate(0);
		&:before {
			content: "üåà";
			left: 0;
		}
	}
	&:hover .rainbow {
		opacity: 1;
		animation: rotate-nonstop 0.2s infinite;
	}
	+ .name {
		color: #444;
	}
}

@keyframes rotate-nonstop {
	50% {
		transform: rotate(92deg);
	}
}

@keyframes omg-yes {
	50% {
		opacity: 1;
	}
	100% {
		top: -50px;
	}
}

@keyframes rainbow {
	0% {
		background: #1abc9c;
	}
	10% {
		background: #2ecc71;
	}
	20% {
		background: #3498db;
	}
	30% {
		background: #9b59b6;
	}
	40% {
		background: #e74c3c;
	}
	50% {
		background: #e67e22;
	}
	60% {
		background: #f1c40f;
	}
	70% {
		background: #2c3e50;
	}
	80% {
		background: #9b59b6;
	}
}

.button-jittery button {
	animation: jittery 4s infinite;
	&:hover {
		animation: heartbeat 0.2s infinite;
	}
}

@keyframes jittery {
	5%,
	50% {
		transform: scale(1);
	}
	10% {
		transform: scale(0.9);
	}
	15% {
		transform: scale(1.15);
	}
	20% {
		transform: scale(1.15) rotate(-5deg);
	}
	25% {
		transform: scale(1.15) rotate(5deg);
	}
	30% {
		transform: scale(1.15) rotate(-3deg);
	}
	35% {
		transform: scale(1.15) rotate(2deg);
	}
	40% {
		transform: scale(1.15) rotate(0);
	}
}

@keyframes heartbeat {
	50% {
		transform: scale(1.1);
	}
}

/*
  https://developer.mozilla.org/en/docs/Web/CSS/box-shadow
  box-shadow: [inset?] [top] [left] [blur] [size] [color];

  Tips:
    - We're setting all the blurs to 0 since we want a solid fill.
    - Add the inset keyword so the box-shadow is on the inside of the element
    - Animating the inset shadow on hover looks like the element is filling in from whatever side you specify ([top] and [left] accept negative values to become [bottom] and [right])
    - Multiple shadows can be stacked
    - If you're animating multiple shadows, be sure to keep the same number of shadows so the animation is smooth. Otherwise, you'll get something choppy.
*/

// Animate the size, inside
.fill:hover,
.fill:focus {
  box-shadow: inset 0 0 0 2em var(--hover);
}

// Animate the size, outside
.pulse:hover, 
.pulse:focus {
  animation: pulse 1s;
  box-shadow: 0 0 0 2em rgba(#fff,0);
}

@keyframes pulse {
  0% { box-shadow: 0 0 0 0 var(--hover); }
}

// Stack multiple shadows, one from the left, the other from the right
.close:hover,
.close:focus {
  box-shadow: 
    inset -3.5em 0 0 0 var(--hover),
    inset 3.5em 0 0 0 var(--hover);  
}

// Size can also be negative; see how it's smaller than the element
.raise:hover,
.raise:focus {
  box-shadow: 0 0.5em 0.5em -0.4em var(--hover);
  transform: translateY(-0.25em);
}

// Animating from the bottom
.up:hover,
.up:focus {
  box-shadow: inset 0 -3.25em 0 0 var(--hover);
}

// And from the left
.slide:hover,
.slide:focus {
  box-shadow: inset 6.5em 0 0 0 var(--hover);
}

// Multiple shadows, one on the outside, another on the inside
.offset {  
  box-shadow: 
    0.3em 0.3em 0 0 var(--color),
    inset 0.3em 0.3em 0 0 var(--color);
  
  &:hover,
  &:focus {
    box-shadow: 
      0 0 0 0 var(--hover),
      inset 6em 3.5em 0 0 var(--hover);
  }
}

//=== Set button colors
// If you wonder why use Sass vars or CSS custom properties...
  // Make a map with the class names and matching colors
$colors: (
  fill: #a972cb,
  pulse: #ef6eae, 
  close: #ff7f82, 
  raise: #ffa260, 
  up: #e4cb58, 
  slide: #8fc866, 
  offset: #19bc8b
);

// Sass variables compile to a static string; CSS variables are dynamic and inherited
  // Loop through the map and set CSS custom properties using Sass variables
@each $button, $color in $colors {
  .#{$button} {
    --color: #{$color};
    --hover: #{adjust-hue($color, 45deg)};
  }
}

// Now every button will have different colors as set above. We get to use the same structure, only changing the custom properties.
button {  
  color: var(--color);
  transition: 0.25s;
  
  &:hover,
  &:focus { 
    border-color: var(--hover);
    color: #fff;
  }
}

//=== Pen styling, ignore
body {
  color: #fff;
  background: hsl(227, 10%, 10%);
  font: 300 1em 'Fira Sans', sans-serif;
  
  // Center everything ever
  justify-content: center;
  align-content: center;
  align-items: center;
  text-align: center;
  min-height: 100vh;
  display: flex;
}

// Basic button styles
button {
  background: none;
  border: 2px solid;
  font: inherit;
  line-height: 1;
  margin: 0.5em;
  padding: 1em 2em;
}

h1 { font-weight: 400; }

code { 
  color: #e4cb58;
  font: inherit;
}
